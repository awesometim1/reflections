How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    Diff automatically highlights the differences between the two, and the possible bug that was introduced.

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    Instead of going back and checking the whole file for bugs, commands like diff and fc(windows) can help easily find the differences between the older file and 
    the current one, so the time it takes to debug the program will be shortened drastically.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    The advantages of manually saving is that you can decide specific checkpoints that you want to save at, like when you complete the moving mechanics in a game, the cons are that without automatic saving, forgetting to save the file will result in no file history.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Git is a repository to store all the versions of a file and everything that goes along with it. Google Docs is for individual documents like essays that don't require multiple files.

How can you use the commands git log and git diff to view the history of files?

    git log will show all of the commits made in the repository and git diff will compare two commits and highlights their differences, resulting in the complete history of the file.

How might using version control make you more confident to make changes that
could break something?

    You can easily revert back to previous versions of the file.

Now that you have your workspace set up, what do you want to try using Git for?

    Every program that I make, especially the more complex and lenghthy programs.